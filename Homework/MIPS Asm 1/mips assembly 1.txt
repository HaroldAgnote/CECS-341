For Exercises 1-5, Use the MARS simulator to write and execute MIPS assembly code that will perform the high level language pseudocode assignment statements. This can be done in a single program source file. Use comments to clearly indicate which assembly instructions correspond to each exercise and separate each exercise by a line of blank space. Variables A through H have the following register mapping:

A: $s0	B: $s1	C: $s2	D: $s3	E: $s4	F: $s5	G: $s6	H: $s7

Use temporary storage registers as appropriate for more complex operations.  
Only use the following instructions: add, addi, sub, and, or, nor, slt

Exercise 1:
A = 200; B = 600; C = -1200;	D = -1500;	E = -2000;
F = (A - (B+C)) - (D + E);

Exercise 2:
D = 2000;	E = 6000; F = 0;
F = -D - (E + 32)	#HINT: the logical AND operation can be used to do modulus

Exercise 3:
H = 500; G = 250;
F = (H > G) ? 1 : 0;

Exercise 4:
F = 0x30
H = F * 5	#HINT: use a series of add instructions

Exercise 5:
G = 10,000	H = 20,000
F = ~(G+H)+1	#tilde is bitwise inversion and can be performed using the nor instruction

Do All of exercises 1-5 sequentially in a single source file.  Once each exercises has been completed with code comments, copy the contents of your mips assembly source file to a file named mipsasm1.txt and upload to the beachboard dropbox named MIPS Asm 1

